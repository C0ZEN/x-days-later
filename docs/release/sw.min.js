'use strict';(function(){'use strict';var cacheName='x-days-later-cache-v1';var filesToCache=['/x-days-later/','/x-days-later/index.html','/x-days-later/assets/css/loader.css','/x-days-later/assets/css/vendors.css','/x-days-later/assets/css/styles.css','/x-days-later/release/vendors.js','/x-days-later/release/x-days-later.min.js','/x-days-later/release/sw.init.min.js'];var success=200;self.addEventListener('install',function($event){console.log('SW: install');$event.waitUntil(function(){caches.open(cacheName).then(function($cache){console.log('SW: cache opened');return $cache.addAll(filesToCache)}).catch(function(){console.log('SW: cache install error')})})});self.addEventListener('fetch',function($event){console.log('SW: fetch');$event.respondWith(function(){return onRespondWithMatch($event)})});function onRespondWithMatch($event){caches.match($event.request).then(function($response){if($response){return $response}var fetchRequest=$event.request.clone();return fetch(fetchRequest).then(function($response2){return onFetchSuccess($event,$response2)})})}function onFetchSuccess($event,$response){if(!$response||$response.status!==success||'basic'!==$response.type){return $response}var responseToCache=$response.clone();caches.open(cacheName).then(function(cache){cache.put($event.request,responseToCache)});return $response}})();
//# sourceMappingURL=sw.min.js.map
