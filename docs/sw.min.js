'use strict'; const data = { successHttpStatus:200, cacheName:'x-days-later-cache-v1', filesToCache:['/x-days-later/assets/css/loader.css'] }; self.addEventListener('install', $event => {
	console.log('SW: install'); $event.waitUntil(() => {
		caches.open(data.cacheName).then($cache => {
			console.log('SW: cache opened'); return $cache.addAll(data.filesToCache).then(() => {}).catch(() => {});
		}).catch(() => {
			console.log('SW: cache open error');
		});
	});
}); self.addEventListener('fetch', $event => {
	let response = null; $event.respondWith(caches.match($event.request).then($response => {
		response = $response; return response.clone();
	}).catch(() => {
		return fetch($event.request);
	}));
}); self.addEventListener('activate', $event => {
	console.log('SW: activate'); $event.waitUntil(self.clients.claim());
});
// # sourceMappingURL=sw.min.js.map
