{"version":3,"sources":["release/sw.js"],"names":["data","successHttpStatus","cacheName","filesToCache","self","addEventListener","console","log","$event","waitUntil","caches","open","then","$cache","addAll","catch","clients","claim"],"mappings":"aASA,GAAMA,MAAO,CACZC,kBAAmB,GADP,CAEZC,UAAmB,uBAFP,CAGZC,aAAmB,CAClB,qCADkB,CAHP,CAAb,CAQAC,KAAKC,gBAAL,CAAsB,SAAtB,CAAiC,gBAAU,CAC1CC,QAAQC,GAAR,CAAY,aAAZ,EACAC,OAAOC,SAAP,CAAiB,UAAM,CACtBC,OACEC,IADF,CACOX,KAAKE,SADZ,EAEEU,IAFF,CAEO,gBAAU,CACfN,QAAQC,GAAR,CAAY,kBAAZ,EACA,MAAOM,QACLC,MADK,CACEd,KAAKG,YADP,EAELS,IAFK,CAEA,UAAM,CACXN,QAAQC,GAAR,CAAY,0BAAZ,CACA,CAJK,EAKLQ,KALK,CAKC,UAAM,CACZT,QAAQC,GAAR,CAAY,uBAAZ,CACA,CAPK,CAQP,CAZF,EAaEQ,KAbF,CAaQ,UAAM,CACZT,QAAQC,GAAR,CAAY,sBAAZ,CACA,CAfF,CAgBA,CAjBD,CAkBA,CApBD,EA6BAH,KAAKC,gBAAL,CAAsB,UAAtB,CAAkC,gBAAU,CAC3CC,QAAQC,GAAR,CAAY,cAAZ,EACAC,OAAOC,SAAP,CAAiBL,KAAKY,OAAL,CAAaC,KAAb,EAAjB,CACA,CAHD","file":"sw.min.js","sourcesContent":["/**\r\n * Generated header by C0ZEN for x-days-later project\r\n * Generated file sw on WebStorm\r\n *\r\n * Created by: Geoffrey \"C0ZEN\" Testelin\r\n * Date: 23/01/2018\r\n * Time: 23:28\r\n * Version: 1.0.0\r\n */\r\nconst data = {\r\n\tsuccessHttpStatus: 200,\r\n\tcacheName        : 'x-days-later-cache-v1',\r\n\tfilesToCache     : [\r\n\t\t'/x-days-later/assets/css/loader.css'\r\n\t]\r\n};\r\n\r\nself.addEventListener('install', $event => {\r\n\tconsole.log('SW: install');\r\n\t$event.waitUntil(() => {\r\n\t\tcaches\r\n\t\t\t.open(data.cacheName)\r\n\t\t\t.then($cache => {\r\n\t\t\t\tconsole.log('SW: cache opened');\r\n\t\t\t\treturn $cache\r\n\t\t\t\t\t.addAll(data.filesToCache)\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\tconsole.log('SW: files added to cache');\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(() => {\r\n\t\t\t\t\t\tconsole.log('SW: cache files error');\r\n\t\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(() => {\r\n\t\t\t\tconsole.log('SW: cache open error');\r\n\t\t\t});\r\n\t});\r\n});\r\n\r\n// self.addEventListener('fetch', $event => {\r\n// \tconsole.log('SW: fetch');\r\n// \t$event.respondWith(() => {\r\n// \t\treturn onRespondWithMatch($event);\r\n// \t});\r\n// });\r\n\r\nself.addEventListener('activate', $event => {\r\n\tconsole.log('SW: activate');\r\n\t$event.waitUntil(self.clients.claim());\r\n});\r\n\r\n// function onRespondWithMatch($event) {\r\n// \tcaches\r\n// \t\t.match($event.request)\r\n// \t\t.then($response => {\r\n// \t\t\tif ($response) {\r\n// \t\t\t\treturn $response;\r\n// \t\t\t}\r\n// \t\t\tconst fetchRequest = $event.request.clone();\r\n// \t\t\treturn fetch(fetchRequest).then($response2 => {\r\n// \t\t\t\treturn onFetchSuccess($event, $response2);\r\n// \t\t\t});\r\n// \t\t});\r\n// }\r\n//\r\n// function onFetchSuccess($event, $response) {\r\n// \tif (!$response || $response.status !== data.successHttpStatus || 'basic' !== $response.type) {\r\n// \t\treturn $response;\r\n// \t}\r\n// \tconst responseToCache = $response.clone();\r\n// \tcaches\r\n// \t\t.open(data.cacheName)\r\n// \t\t.then(cache => {\r\n// \t\t\tcache.put($event.request, responseToCache);\r\n// \t\t});\r\n// \treturn $response;\r\n// }"]}